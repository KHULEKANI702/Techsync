/*
        ìãú  Ôº¢ÔºØÔº¥ ÔºÆÔº°Ôº≠Ôº• ‚á©
         
          ùóçùñæùñºùóÅùóåùóíùóáùñº
         
       ìãú Ôº¢ÔºØÔº¥ ÔºØÔº∑ÔºÆÔº•Ôº≤ ‚á©
         
         ùóÑùóÅùóéùóÖùñæùóÑùñ∫ùóáùóÇ ùñΩùóéùñªùñæ
         
       ìãú Ôº§Ôº•Ôº∂Ôº•Ôº¨ÔºØÔº∞Ôº•Ôº≤ ‚á©
         
         ùóÑùóÅùóéùóÖùñæùóÑùñ∫ùóáùóÇ ùñΩùóéùñªùñæ
         
       ìãú Ôº§Ôº•Ôº∂ Ôº¨ÔºØÔº£Ôº°Ôº¥Ôº©ÔºØÔºÆ ‚á©
         
         ùóìùóÇùóÜùñªùñ∫ùñªùóêùñæ,ùñªùóéùóÖùñ∫ùóêùñ∫ùóíùóà
         
       ìãú Ôº¥Ôº•Ôº°Ôº≠ ÔºÆÔº°Ôº≠Ôº• ‚á©
         
         ùóçùñæùñºùóÅùóÄùóéùóíùóå
         
*/





const axios = require('axios');
const config = require('../config');
const { cmd, commands } = require('../command');

cmd({
    pattern: "githubstalk",
    desc: "Fetch detailed GitHub user profile including profile picture.",
    category: "menu",
    react: "üñ•Ô∏è",
    filename: __filename
},
async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
    try {
        const username = args[0];
        if (!username) {
            return reply("*Please provide a GitHub username.*");
        }
        const apiUrl = `https://api.github.com/users/${username}`;
        const response = await axios.get(apiUrl);
        const data = response.data;

        let userInfo = `üë§ *·¥ús·¥á Ä…¥·¥Ä·¥ç·¥á* : *${data.name || data.login}*
üîó *…¢…™·¥õ ú·¥ú ô ·¥ú Ä ü* : *(${data.html_url})*
üìù * ô…™·¥è* : *${data.bio || 'Not available'}*
üèôÔ∏è * ü·¥è·¥Ñ·¥Ä·¥õ…™·¥è…¥* : *${data.location || 'Unknown'}*
üìä *·¥ò·¥ú ô ü…™·¥Ñ  Ä·¥á·¥ò·¥ès* : *${data.public_repos}*
üë• *∆í·¥è ü ü·¥è·¥°·¥á Äs*: *${data.followers} | Following: ${data.following}*
üìÖ *·¥Ñ Ä·¥á·¥Ä·¥õ·¥á·¥Ö ·¥Ä·¥õ* : *${new Date(data.created_at).toDateString()}*
üî≠ *·¥ò·¥ú ô ü…™·¥Ñ …¢…™s·¥õs* : *${data.public_gists}*

> *·¥ç·¥†·¥á ü·¥Äs·¥á ·¥õ·¥á·¥Ñ ú…¥·¥è ü·¥è…¢ è*`;
          const sentMsg = await conn.sendMessage(from,{image:{url: data.avatar_url },caption: userInfo },{quoted:mek })
    } catch (e) {
        console.log(e);
        reply(`error: ${e.response ? e.response.data.message : e.message}`);
    }
});

// coded by mvelase technology 
 
