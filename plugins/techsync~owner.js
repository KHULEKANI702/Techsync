/*
        ìãú  Ôº¢ÔºØÔº¥ ÔºÆÔº°Ôº≠Ôº• ‚á©
         
          ùóçùñæùñºùóÅùóåùóíùóáùñº
         
       ìãú Ôº¢ÔºØÔº¥ ÔºØÔº∑ÔºÆÔº•Ôº≤ ‚á©
         
         ùóÑùóÅùóéùóÖùñæùóÑùñ∫ùóáùóÇ ùñΩùóéùñªùñæ
         
       ìãú Ôº§Ôº•Ôº∂Ôº•Ôº¨ÔºØÔº∞Ôº•Ôº≤ ‚á©
         
         ùóÑùóÅùóéùóÖùñæùóÑùñ∫ùóáùóÇ ùñΩùóéùñªùñæ
         
       ìãú Ôº§Ôº•Ôº∂ Ôº¨ÔºØÔº£Ôº°Ôº¥Ôº©ÔºØÔºÆ ‚á©
         
         ùóìùóÇùóÜùñªùñ∫ùñªùóêùñæ,ùñªùóéùóÖùñ∫ùóêùñ∫ùóíùóà
         
       ìãú Ôº¥Ôº•Ôº°Ôº≠ ÔºÆÔº°Ôº≠Ôº• ‚á©
         
         ùóçùñæùñºùóÅùóÄùóéùóíùóå
         
*/




const { cmd } = require('../command');
const config = require('../config');

cmd({
    pattern: "owner",
    react: "‚úÖ", 
    desc: "Get owner number",
    category: "main",
    filename: __filename
}, 
async (conn, mek, m, { from }) => {
    try {
        const ownerNumber = config.OWNER_NUMBER; // Fetch owner number from config
        const ownerName = config.OWNER_NAME;     // Fetch owner name from config

        const vcard = 'BEGIN:VCARD\n' +
                      'VERSION:3.0\n' +
                      `FN:${ownerName}\n` +  
                      `TEL;type=CELL;type=VOICE;waid=${ownerNumber.replace('+', '')}:${ownerNumber}\n` + 
                      'END:VCARD';

        // Send the vCard
        const sentVCard = await conn.sendMessage(from, {
            contacts: {
                displayName: ownerName,
                contacts: [{ vcard }]
            }
        });

        // Send the owner contact message with image and audio
        await conn.sendMessage(from, {
            image: { url: 'https://files.catbox.moe/jt3qb1.png' }, // Image URL from your request
            caption: `
‚ï≠‚îÄ‚îÄ‚îÄ‚üÆ *·¥õ·¥á·¥Ñ ús è…¥·¥Ñ-·¥ç·¥Ö* ‚üØ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
‚îÇ‚≥∫‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
‚îÇ‚≥∫‚îÇ‚òç * ô·¥è·¥õ-…¥·¥Ä·¥ç·¥á : ·¥õ·¥á·¥Ñ ús è…¥·¥Ñ-·¥ç·¥Ö*
‚îÇ‚≥∫‚îÇ‚òç *·¥è·¥°…¥·¥á Ä-…¥·¥Ä·¥ç·¥á* : ${ownerName}
‚îÇ‚≥∫‚îÇ‚òç *·¥è·¥°…¥·¥á Ä-…¥·¥ú·¥ç ô·¥á Ä* * : ${ownerNumber}
‚îÇ‚≥∫‚îÇ‚òç *s·¥ò·¥á·¥á·¥Ö* : *${ping}* *·¥çs*
‚îÇ‚≥∫‚îó‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
‚îó‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑

> *·¥õ·¥á·¥Ñ ús è…¥·¥Ñ-·¥ç·¥Ö ·¥è·¥°…¥·¥á Ä*`, // Display the owner's details
            contextInfo: {
                mentionedJid: [`${ownerNumber.replace('+', '')}@s.whatsapp.net`], 
                forwardingScore: 999,
                isForwarded: true,
                forwardedNewsletterMessageInfo: {
                    newsletterJid: '120363411325763461@newsletter',
                    newsletterName: 'Techsync~MD Owner',
                    serverMessageId: 143
                }            
            }
        }, { quoted: mek });

        // Send audio as per your request
        await conn.sendMessage(from, {
            audio: { url: 'https://raw.githubusercontent.com/mvelase-ofc/Techsync/refs/heads/main/techsync/Techsync-autovoice/Techsync.m4a' }, // Audio URL
            mimetype: 'audio/mp4',
            ptt: true
        }, { quoted: mek });

    } catch (error) {
        console.error(error);
        reply(`*An error occurred: ${error.message}*`);
    }
});
