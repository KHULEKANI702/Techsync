/*
        ìãú  Ôº¢ÔºØÔº¥ ÔºÆÔº°Ôº≠Ôº• ‚á©
         
          ùóçùñæùñºùóÅùóåùóíùóáùñº
         
       ìãú Ôº¢ÔºØÔº¥ ÔºØÔº∑ÔºÆÔº•Ôº≤ ‚á©
         
         ùóÑùóÅùóéùóÖùñæùóÑùñ∫ùóáùóÇ ùñΩùóéùñªùñæ
         
       ìãú Ôº§Ôº•Ôº∂Ôº•Ôº¨ÔºØÔº∞Ôº•Ôº≤ ‚á©
         
         ùóÑùóÅùóéùóÖùñæùóÑùñ∫ùóáùóÇ ùñΩùóéùñªùñæ
         
       ìãú Ôº§Ôº•Ôº∂ Ôº¨ÔºØÔº£Ôº°Ôº¥Ôº©ÔºØÔºÆ ‚á©
         
         ùóìùóÇùóÜùñªùñ∫ùñªùóêùñæ,ùñªùóéùóÖùñ∫ùóêùñ∫ùóíùóà
         
       ìãú Ôº¥Ôº•Ôº°Ôº≠ ÔºÆÔº°Ôº≠Ôº• ‚á©
         
         ùóçùñæùñºùóÅùóÄùóéùóíùóå
         
*/




const { cmd, commands } = require('../command');
const os = require("os");
const { runtime } = require('../lib/functions');

cmd({
    pattern: "alive",
    alias: ["status"],
    desc: "Check uptime and system status",
    category: "main",
    react: "üìü",
    filename: __filename
},
async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
    try {
        // Generate system status message
        const status = `‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚üÆ *·¥õ·¥á·¥Ñ ús è…¥·¥Ñ-·¥ç·¥Ö* ‚üØ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
‚îÇ‚û´‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
‚îÇ‚û´‚îÇ‚Ä¢ ‚è≥ *·¥õ·¥á·¥Ñ ús è…¥·¥Ñ-·¥ú·¥ò·¥õ…™·¥ç·¥á* :  *${runtime(process.uptime())}* 
‚îÇ‚û´‚îÇ‚Ä¢ üìü * Ä·¥Ä·¥ç-·¥ús·¥Ä…¢·¥á* : *${(process.memoryUsage().heapUsed / 1024 / 1024).toFixed(2)}·¥ç ô / ${(os.totalmem() / 1024 / 1024).toFixed(2)}·¥ç ô*
‚îÇ‚û´‚îÇ‚Ä¢ ‚öôÔ∏è * ú·¥ès·¥õ-…¥·¥Ä·¥ç·¥á* : *${os.hostname()}*
‚îÇ‚û´‚îÇ‚Ä¢ üë®‚Äçüíª * ô·¥è·¥õ-·¥è·¥°…¥·¥á Ä : ·¥ã ú·¥ú ü·¥á·¥ã·¥Ä…¥…™ ·¥ç·¥†·¥á ü·¥Äs·¥á*
‚îÇ‚û´‚îÇ‚Ä¢ üè∑ *·¥õ·¥á·¥Ñ ús è…¥·¥Ñ-·¥†·¥á Äs…™·¥è…¥* : *2.5.0*
‚îÇ‚û´‚îó‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
‚îó‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑

> *·¥õ·¥á·¥Ñ ús è…¥·¥Ñ-·¥ç·¥Ö …™s ·¥Ä ü…™·¥†·¥á …¥·¥è·¥° ·¥Ä…¥·¥Ö  Ä·¥á·¥Ä·¥Ö è f·¥è Ä ·¥ús·¥á* .

> ‚Éû*·¥õ·¥á·¥Ñ ús è…¥·¥Ñ-·¥ç·¥Ö- ô·¥è·¥õ*`;

        // Send the status message with an image
        await conn.sendMessage(from, { 
            image: { url: `https://files.catbox.moe/jt3qb1.png` },  // Image URL
            caption: status,
            contextInfo: {
                mentionedJid: [m.sender],
                forwardingScore: 999,
                isForwarded: true,
                forwardedNewsletterMessageInfo: {
                    newsletterJid: '120363411325763461@newsletter',
                    newsletterName: '*·¥õ·¥á·¥Ñ ús è…¥·¥Ñ-·¥ç·¥Ö ·¥Ä ü…™·¥†·¥á*',
                    serverMessageId: 143
                }
            }
        }, { quoted: mek });

    } catch (e) {
        console.error("Error in alive command:", e);
        reply(`An error occurred: ${e.message}`);
    }
});
